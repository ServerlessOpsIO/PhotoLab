AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: PhotOps photo analysis service

Parameters:
  ServiceName:
    Type: String
    Description: "Name of service"
    Default: "PhotoLab"

  ServiceEnv:
    Type: String
    Description: "Name of deployment environment"
    Default: "prime"

  LogLevel:
    Type: String
    Description: "Log level for functions; used internally in code."
    Default: 'INFO'
    AllowedValues:
      - 'DEBUG'
      - 'INFO'
      - 'WARNING'
      - 'ERROR'
      - 'CRITICAL'

  # FIXME: integrate this into function.
  XRayTracingEnabled:
    Type: String
    Description: "AWS X-RAY tracing enabled"
    Default: 'Disabled'
    AllowedValues:
      - 'Enabled'
      - 'Disabled'

  XRayTracingMode:
    Type: String
    Description: "AWS XRay tracing mode"
    Default: PassThrough
    AllowedValues:
      - Active
      - PassThrough

  PhotoOpsBucketName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of PhotOps image S3 bucket
    Default: /PhotoOpsAI/PhotoOps/prime/PhotoOpsBucketName

  PhotoOpsEventBusArn:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Arn of the PhotoOps EventBus
    Default: /PhotoOpsAI/PhotoOps/prime/EventBusArn

  PhotoOpsEventBusName:
    Type: AWS::SSM::Parameter::Value<String>
    Description: Name of the PhotoOps EventBus
    Default: /PhotoOpsAI/PhotoOps/prime/EventBusName


Mappings:
  XRayTracingEnabled:
    Enabled:
      Enabled: "true"
    Disabled:
      Enabled: "false"

Globals:
  Function:
    Environment:
      Variables:
        LOG_LEVEL:
          Ref: LogLevel
        POWERTOOLS_SERVICE_NAME: !Ref AWS::StackName
        XRAY_TRACING_ENABLED:
          Fn::FindInMap:
            - XRayTracingEnabled
            - Ref: XRayTracingEnabled
            - Enabled
    Tracing: !Ref XRayTracingMode


Resources:
  # For CloudWatch Alarms
  CloudWatchTopic:
    Type: AWS::SNS::Topic


  DetectFacesStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      DefinitionUri: src/state-machines/detect-faces.yaml
      DefinitionSubstitutions:
        EventBusName: !Ref PhotoOpsEventBusName
      Tracing:
        Enabled: true
      Logging:
        Level: ERROR
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt DetectFacesLogGroup.Arn
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - s3:ListBucket
              - s3:GetObject
            Resource:
              - !Sub 'arn:aws:s3:::${PhotoOpsBucketName}'
              - !Sub 'arn:aws:s3:::${PhotoOpsBucketName}/*'
          - Effect: Allow
            Action:
              - "events:PutEvents"
            Resource:
              - !Ref PhotoOpsEventBusArn
          - Effect: Allow
            Action:
              - logs:CreateLogDelivery
              - logs:GetLogDelivery
              - logs:UpdateLogDelivery
              - logs:DeleteLogDelivery
              - logs:ListLogDeliveries
              - logs:PutResourcePolicy
              - logs:DescribeResourcePolicies
              - logs:DescribeLogGroups
            Resource: '*'
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:DescribeLogStream
              - logs:PutLogEvents
            Resource:
              - !GetAtt DetectFacesLogGroup.Arn
          - Effect: Allow
            Action:
              - rekognition:CreateCollection
              - rekognition:DescribeCollection
              - rekognition:IndexFaces
            Resource: '*'

  DetectFacesLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/step-functions/${ServiceName}-${ServiceEnv}'
      RetentionInDays: 7
